{"version":3,"sources":["webpack:///./src/components/inlineCode.tsx","webpack:///./src/pages/getting-started/first-validator.tsx","webpack:///./src/components/shell.tsx","webpack:///./node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/prismjs/components/prism-bash.js","webpack:///./node_modules/core-js/modules/_string-repeat.js"],"names":["InlineCode","children","className","classes","indent","text","count","replace","repeat","modelCode","builderCode","validationCode","resultCode","programCode","FirstValidator","title","description","to","code","Shell","preRef","useRef","useEffect","Prism","highlightElement","current","ref","$export","P","envVars","insideString","pattern","RegExp","alias","greedy","inside","lookbehind","languages","bash","variable","toBeCopied","i","length","shell","toInteger","defined","module","exports","str","String","this","res","n","Infinity","RangeError"],"mappings":"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","file":"component---src-pages-getting-started-first-validator-tsx-d654ae5c2a4b75b469d2.js","sourcesContent":["import React, { ReactElement } from \"react\"\n\nfunction InlineCode({ children, className }: any): ReactElement {\n  let classes = \"inline-code\"\n  if (className) {\n    classes = `${classes} ${className}`\n  }\n  return <span className={classes}>{children}</span>\n}\n\nexport default InlineCode\n","import React, { ReactElement } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../../components/layout\"\nimport CSharp from \"../../components/csharp\"\nimport InlineCode from \"../../components/inlineCode\"\nimport Shell from \"../../components/shell\"\n\nfunction indent(text: string, count: number) {\n  return text.replace(/^(?!\\s*$)/gm, \" \".repeat(count))\n}\n\nconst modelCode = `public class Employee\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public string Email { get; set; }\n    public string Phone { get; set; }\n    public string[] Skills { get; set; }\n    public decimal Salary { get; set; }\n    public DateTime Commenced { get; set; }\n    public bool Active { get; set; }\n}`\n\nconst builderCode = `var validator = new ValidatorBuilder<Employee>()\n    .Required(e => e.FirstName)\n    .For(e => e.LastName, name => \n    {\n        name.Required()\n            .MaxLength(30);\n    })\n    .Email(e => e.Email)\n    .Contains(e => e.Skills, \"Cromulent\")\n    .Range(e => e.Salary, 50000, 100000)\n    .LessThanOrEqual(e => e.Commenced, DateTime.Today)\n    .Continue(v =>\n    {\n        v.True(e => e.Active);\n    })\n    .Build();`\n\nconst validationCode = `var employee = new Employee\n{\n    FirstName = \"Homer\",\n    Email = \"homer[at]springfieldnuclear.com\",\n    Salary = 45000,\n    Skills = new[] { \"Embiggening\" }\n};\n\nvar result = validator.Validate(employee);`\n\nconst resultCode = `if (!result.IsValid)\n{\n    foreach (var rule in result.BrokenRules)\n    {\n        Console.WriteLine($\"[{rule.Rule}] {rule.Key}: {rule.Message}\");\n    }\n};`\n\nconst programCode = `using System;\nusing Validatum;\n\nnamespace ConsoleApp\n{\n    public class Program\n    {\n        public static void Main(string[] args)\n        {\n${indent(builderCode, 12)}\n\n${indent(validationCode, 12)}\n\n${indent(resultCode, 12)}\n        }\n\n${indent(modelCode, 8)}\n    }\n}`\n\nconst outputCode = `[Required] LastName: Value is required.\n[Email] Email: Value must be a valid email.\n[Contains] Skills: Must contain item 'Cromulent'.\n[Range] Salary: Value must be in range '50000' to '100000'.`\n\nfunction FirstValidator(): ReactElement {\n  return (\n    <Layout\n      title=\"Create your first Validator\"\n      description=\"Create your first validator using Validatum\"\n    >\n      <h1>Create your first Validator</h1>\n      <p>\n        Building a validation function is accomplished with the{\" \"}\n        <InlineCode>ValidatorBuilder&lt;T&gt;</InlineCode> class. Where{\" \"}\n        <InlineCode>T</InlineCode> is the type you want to validate. See{\" \"}\n        <Link to=\"/building/validator-builder/\">\n          The ValidatorBuilder&lt;T&gt; Class\n        </Link>\n        .\n      </p>\n      <hr className=\"my-6\" />\n      <p>\n        For your first validator we will use the following{\" \"}\n        <InlineCode>Employee</InlineCode> model.\n      </p>\n      <div className=\"mb-4\">\n        <CSharp code={modelCode} />\n      </div>\n      <p>Our validation function must satisfy the following rules:</p>\n      <ul className=\"list mb-4\">\n        <li>\n          <InlineCode>FirstName</InlineCode> is required.\n        </li>\n        <li>\n          <InlineCode>LastName</InlineCode> is required and have no more than 30\n          characters.\n        </li>\n        <li>\n          <InlineCode>Email</InlineCode> must be a valid email.\n        </li>\n        <li>\n          <InlineCode>Skills</InlineCode> must contain{\" \"}\n          <strong>Cromulent</strong>.\n        </li>\n        <li>\n          <InlineCode>Salary</InlineCode> between <strong>50,000</strong> and{\" \"}\n          <strong>100,000</strong>.\n        </li>\n        <li>\n          <InlineCode>Commenced</InlineCode> cannot be in the future.\n        </li>\n        <li>\n          <InlineCode>Active</InlineCode> must be true only if previous rules\n          pass.\n        </li>\n      </ul>\n      <p>\n        We can build a validator that will enforce the above rules like this:\n      </p>\n      <div className=\"mb-4\">\n        <CSharp code={builderCode} />\n        <p>\n          The <InlineCode>Build()</InlineCode> method will return a\n          <InlineCode>Validator&lt;Employee&gt;</InlineCode> which can be used\n          to validate <InlineCode>Employee</InlineCode> instances.\n        </p>\n      </div>\n      <div className=\"mb-4\">\n        <CSharp code={validationCode} />\n        <p>\n          The <InlineCode>Validate()</InlineCode> method returns a{\" \"}\n          <InlineCode>ValidationResult</InlineCode> instance containing a\n          collection of broken validation rules. See{\" \"}\n          <Link to=\"/validation/results/\">Validation Results</Link>.\n        </p>\n      </div>\n      <div className=\"mb-4\">\n        <CSharp code={resultCode} />\n      </div>\n      <p>Putting it all together into an executable console application.</p>\n      <div className=\"mb-4\">\n        <CSharp code={programCode} />\n      </div>\n      <p>Will produce the following output:</p>\n      <div className=\"mb-4\">\n        <Shell code={outputCode} />\n      </div>\n    </Layout>\n  )\n}\n\nexport default FirstValidator\n","import React, { ReactElement, useEffect, useRef } from \"react\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-bash\"\n\nfunction Shell({ code }: any): ReactElement {\n  const preRef = useRef<HTMLPreElement | null>(null)\n\n  useEffect(() => {\n    Prism.highlightElement(preRef.current as Element)\n  }, [])\n\n  return (\n    <>\n      <pre ref={preRef} className=\"language-bash relative z-0\">\n        <code>{code}</code>\n      </pre>\n    </>\n  )\n}\n\nexport default Shell\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\2)[^\\\\])*\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n"],"sourceRoot":""}