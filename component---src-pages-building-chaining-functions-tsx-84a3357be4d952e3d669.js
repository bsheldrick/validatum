(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"8Ik1":function(e,n,t){"use strict";t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("91GP");var a=t("q1tI"),i=t.n(a);n.a=function(e){var n=e.code,t=e.className,a=e.children,l=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,["code","className","children"]),r="inline-code";return t&&(r=r+" "+t),i.a.createElement("span",Object.assign({className:r},l),n||a)}},LCnP:function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),i=t.n(a),l=t("N8Nn"),r=t("8Ik1"),c=t("9Dj+");n.default=function(){return i.a.createElement(c.a,null,i.a.createElement("h1",null,"Chaining Functions"),i.a.createElement("p",null,"All built-in validation functions are simply extension methods that always return the original ",i.a.createElement(r.a,{code:"IValidatorBuilder<T>"})," ","instance, therefore allowing validation functions to be chained together."),i.a.createElement("p",null,"Validation functions are executed in the order they are defined in the builder. When your validation function is complete, call the"," ",i.a.createElement(r.a,null,"Build()")," method to get the"," ",i.a.createElement(r.a,{code:"Validator<T>"})," instance."),i.a.createElement("hr",{className:"my-6"}),i.a.createElement("div",null,i.a.createElement("h5",{className:"font-semibold text-gray-800 text-sm mb-4"},"Example"),i.a.createElement(l.a,{code:'var validator = new ValidatorBuilder<Employee>() // create builder instance\n    .Required(e => e.FirstName)           // first validation function\n    .Email(e => e.Email)                  // chaining the second validation function\n    .Contains(e => e.Skills, "Moxie")     // chaining third function \n    .Range(e => e.Salary, 50000, 100000)  // chain fourth function\n    .LessThanOrEqual(e => e.Commenced, DateTime.Today) // etc...\n    .Build();'})))}}}]);
//# sourceMappingURL=component---src-pages-building-chaining-functions-tsx-84a3357be4d952e3d669.js.map