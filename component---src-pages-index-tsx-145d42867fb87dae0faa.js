(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{QeBL:function(e,a,l){"use strict";l.r(a);var t=l("q1tI"),n=l.n(t),r=l("9Dj+"),i=l("N8Nn"),u=l("DwpA"),m=l("Wbzz");a.default=function(){return n.a.createElement(r.a,null,n.a.createElement("h1",null,"Validatum"),n.a.createElement("p",null,"Validatum is an open-source library for building fluent validation functions for .NET."),n.a.createElement("h2",null,"Platform Support"),n.a.createElement("ul",{className:"list"},n.a.createElement("li",null,".NET Standard 2.0+"),n.a.createElement("li",null,".NET Core 2.0+"),n.a.createElement("li",null,".NET Framework 4.6.1+")),n.a.createElement("h2",null,"Example"),n.a.createElement("div",{className:""},n.a.createElement(i.a,{code:'var validator = new ValidatorBuilder<Employee>()\n    .Required(e => e.FirstName)\n    .Email(e => e.Email)\n    .For(e => e.LastName, name =>\n    {\n        name.MinLength(5)\n            .Equal("Smithers");\n    })\n    .Build();\n\nvar result = validator.Validate(\n    new Employee \n    { \n        LastName = "Simpson",\n        Email = "homer[at]springfieldnuclear.com"\n    }\n);\n\nforeach (var rule in result.BrokenRules)\n{\n    Console.WriteLine($"[{rule.Rule}] {rule.Key}: {rule.Message}");\n}\n'}),n.a.createElement("p",{className:"mt-4"},"The example will produce the output:"),n.a.createElement(u.a,{code:"[Required] FirstName: Value is required.\n[Email] Email: Value must be a valid email.\n[Equal] LastName: Value must equal 'Smithers'."})),n.a.createElement("h2",null,"Getting Started"),n.a.createElement("ul",{className:"list"},n.a.createElement("li",null,n.a.createElement(m.Link,{to:"/getting-started/installation/",className:"text-blue-600 hover:underline"},"Install via Nuget")),n.a.createElement("li",null,n.a.createElement(m.Link,{to:"/getting-started/first-validator/",className:"text-blue-600 hover:underline"},"Create your first Validator"))))}}}]);
//# sourceMappingURL=component---src-pages-index-tsx-145d42867fb87dae0faa.js.map